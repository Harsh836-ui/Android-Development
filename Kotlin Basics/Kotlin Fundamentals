package harsh.my.a1kotlinbasics

import java.lang.IllegalArgumentException
import kotlin.math.ceil
import kotlin.math.floor
import kotlin.io.println as println
import kotlin.text.toLowerCase as toLowerCase

//----------SETS & MAPS
/*Sets differ from lists in the way they put
constraints on the uniqueness of elements. They doesnâ€™t allow duplicate elements or
the same elements within a set*/


fun main() {
    val fruits = setOf("Orange", "Apple", "Grape", "Apple", "Orange", "Mango")
    println(fruits.size) //gives size including only unique elements
    println(fruits) //to print
    println(fruits.toSortedSet())  //sorts in alphabetical order

    //To convert it into mutable list:
    val newFruits = fruits.toMutableList()

    // we can use add to insert at any index we want
    newFruits.add(3, "Pear")
    newFruits.add("Watermelon") //default inserts at last
    println(newFruits)

    //Accesing element:
    println(newFruits.elementAt(3))

    val numbers = (1..15).toMutableSet() //create a set numbers having values from 1 to 15
    println(numbers)

//------------MAPS: type of collection that store data in form of key value pair
//also called dictionary or hashmap
    val daysWeek: Map<Int, String> = mapOf(1 to "Monday" , 2 to "Tuesday" , 3 to "Wednesday")
    println(daysWeek[2]) // 2 here means key value not the index

    for (value in daysWeek.keys){
        print("$value is to ${daysWeek[value]} ")
    }





}









